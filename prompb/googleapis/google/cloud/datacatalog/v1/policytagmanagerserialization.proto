// Copyright 2021 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package google.cloud.datacatalog.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";
import "google/cloud/datacatalog/v1/policytagmanager.proto";
import "google/iam/v1/policy.proto";
import "google/api/client.proto";

option cc_enable_arenas = true;
option csharp_namespace = "Google.Cloud.DataCatalog.V1";
option go_package = "google.golang.org/genproto/googleapis/cloud/datacatalog/v1;datacatalog";
option java_multiple_files = true;
option java_outer_classname = "PolicyTagManagerSerializationProto";
option java_package = "com.google.cloud.datacatalog.v1";
option php_namespace = "Google\\Cloud\\DataCatalog\\V1";
option ruby_package = "Google::Cloud::DataCatalog::V1";

// Policy Tag Manager serialization API service allows clients to manipulate
// their policy tags and taxonomies in serialized format, where taxonomy is a
// hierarchical group of policy tags.
service PolicyTagManagerSerialization {
  option (google.api.default_host) = "datacatalog.googleapis.com";
  option (google.api.oauth_scopes) = "https://www.googleapis.com/auth/cloud-platform";

  // Creates new taxonomies (including their policy tags) by importing from
  // inlined source or cross-regional source. New taxonomies will be created in
  // a given parent project.
  //
  // If using the cross-regional source, a new taxonomy is created by copying
  // from a source in another region.
  //
  // If using the inlined source, this method provides a way to bulk create
  // taxonomies and policy tags using nested proto structure.
  rpc ImportTaxonomies(ImportTaxonomiesRequest) returns (ImportTaxonomiesResponse) {
    option (google.api.http) = {
      post: "/v1/{parent=projects/*/locations/*}/taxonomies:import"
      body: "*"
    };
  }

  // Exports taxonomies as the requested type and returns the taxonomies
  // including their policy tags. The requested taxonomies must belong to one
  // project.
  //
  // SerializedTaxonomy protos with nested policy tags that are generated by
  // this method can be used as input for future ImportTaxonomies calls.
  rpc ExportTaxonomies(ExportTaxonomiesRequest) returns (ExportTaxonomiesResponse) {
    option (google.api.http) = {
      get: "/v1/{parent=projects/*/locations/*}/taxonomies:export"
    };
  }
}

// Message representing a taxonomy, including its policy tags in hierarchy, as a
// nested proto. Used for taxonomy replacement, import, and export.
message SerializedTaxonomy {
  // Required. Display name of the taxonomy. At most 200 bytes when encoded in UTF-8.
  string display_name = 1 [(google.api.field_behavior) = REQUIRED];

  // Description of the serialized taxonomy. At most 2000 bytes when encoded in
  // UTF-8. If not set, defaults to an empty description.
  string description = 2;

  // Top level policy tags associated with the taxonomy, if any.
  repeated SerializedPolicyTag policy_tags = 3;

  // A list of policy types that are activated per taxonomy.
  repeated Taxonomy.PolicyType activated_policy_types = 4;
}

// Message representing one policy tag, including all its descendant policy
// tags, as a nested proto.
message SerializedPolicyTag {
  // Resource name of the policy tag.
  //
  // This field will be ignored when calling ImportTaxonomies.
  string policy_tag = 1;

  // Required. Display name of the policy tag. At most 200 bytes when encoded in UTF-8.
  string display_name = 2 [(google.api.field_behavior) = REQUIRED];

  // Description of the serialized policy tag. The length of the description is
  // limited to 2000 bytes when encoded in UTF-8. If not set, defaults to an
  // empty description.
  string description = 3;

  // Children of the policy tag, if any.
  repeated SerializedPolicyTag child_policy_tags = 4;
}

// Request message for
// [ImportTaxonomies][google.cloud.datacatalog.v1.PolicyTagManagerSerialization.ImportTaxonomies].
message ImportTaxonomiesRequest {
  // Required. Resource name of project that the imported taxonomies will belong to.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      child_type: "datacatalog.googleapis.com/Taxonomy"
    }
  ];

  // Source taxonomies to be imported.
  oneof source {
    // Inline source used for taxonomies import.
    InlineSource inline_source = 2;

    // Cross-regional source taxonomy to be imported.
    CrossRegionalSource cross_regional_source = 3;
  }
}

// Inline source containing taxonomies to import.
message InlineSource {
  // Required. Taxonomies to be imported.
  repeated SerializedTaxonomy taxonomies = 1 [(google.api.field_behavior) = REQUIRED];
}

// Cross-regional source used to import an existing taxonomy into a different
// region.
message CrossRegionalSource {
  // Required. The resource name of the source taxonomy to be imported.
  string taxonomy = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "datacatalog.googleapis.com/Taxonomy"
    }
  ];
}

// Response message for
// [ImportTaxonomies][google.cloud.datacatalog.v1.PolicyTagManagerSerialization.ImportTaxonomies].
message ImportTaxonomiesResponse {
  // Taxonomies that were imported.
  repeated Taxonomy taxonomies = 1;
}

// Request message for
// [ExportTaxonomies][google.cloud.datacatalog.v1.PolicyTagManagerSerialization.ExportTaxonomies].
message ExportTaxonomiesRequest {
  // Required. Resource name of the project that the exported taxonomies belong to.
  string parent = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      child_type: "datacatalog.googleapis.com/Taxonomy"
    }
  ];

  // Required. Resource names of the taxonomies to be exported.
  repeated string taxonomies = 2 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "datacatalog.googleapis.com/Taxonomy"
    }
  ];

  // Required. Taxonomies export destination.
  oneof destination {
    // Export taxonomies as serialized taxonomies, which contain all the policy
    // tags as nested protos.
    bool serialized_taxonomies = 3;
  }
}

// Response message for
// [ExportTaxonomies][google.cloud.datacatalog.v1.PolicyTagManagerSerialization.ExportTaxonomies].
message ExportTaxonomiesResponse {
  // List of taxonomies and policy tags as nested protos.
  repeated SerializedTaxonomy taxonomies = 1;
}
